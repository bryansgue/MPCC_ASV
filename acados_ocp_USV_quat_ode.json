{
    "acados_include_path": "/home/bryansgue/acados/include",
    "acados_lib_path": "/home/bryansgue/acados/lib",
    "code_export_directory": "/home/bryansgue/Doctoral_Research/Python/5_SAV/c_generated_code",
    "constraints": {
        "C": [],
        "C_e": [],
        "D": [],
        "constr_type": "BGH",
        "constr_type_0": "BGH",
        "constr_type_e": "BGH",
        "has_x0": true,
        "idxbu": [
            0,
            1
        ],
        "idxbx": [],
        "idxbx_0": [
            0,
            1,
            2,
            3,
            4,
            5,
            6,
            7,
            8
        ],
        "idxbx_e": [],
        "idxbxe_0": [
            0,
            1,
            2,
            3,
            4,
            5,
            6,
            7,
            8
        ],
        "idxsbu": [],
        "idxsbx": [],
        "idxsbx_e": [],
        "idxsg": [],
        "idxsg_e": [],
        "idxsh": [
            0,
            1
        ],
        "idxsh_0": [],
        "idxsh_e": [],
        "idxsphi": [],
        "idxsphi_0": [],
        "idxsphi_e": [],
        "lbu": [
            0,
            -100
        ],
        "lbx": [],
        "lbx_0": [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0
        ],
        "lbx_e": [],
        "lg": [],
        "lg_e": [],
        "lh": [
            0,
            0
        ],
        "lh_0": [],
        "lh_e": [],
        "lphi": [],
        "lphi_0": [],
        "lphi_e": [],
        "lsbu": [],
        "lsbx": [],
        "lsbx_e": [],
        "lsg": [],
        "lsg_e": [],
        "lsh": [
            0.0,
            0.0
        ],
        "lsh_0": [],
        "lsh_e": [],
        "lsphi": [],
        "lsphi_0": [],
        "lsphi_e": [],
        "ubu": [
            300,
            100
        ],
        "ubx": [],
        "ubx_0": [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0
        ],
        "ubx_e": [],
        "ug": [],
        "ug_e": [],
        "uh": [
            1000000000.0,
            1000000000.0
        ],
        "uh_0": [],
        "uh_e": [],
        "uphi": [],
        "uphi_0": [],
        "uphi_e": [],
        "usbu": [],
        "usbx": [],
        "usbx_e": [],
        "usg": [],
        "usg_e": [],
        "ush": [
            0.0,
            0.0
        ],
        "ush_0": [],
        "ush_e": [],
        "usphi": [],
        "usphi_0": [],
        "usphi_e": []
    },
    "cost": {
        "Vu": [],
        "Vu_0": [],
        "Vx": [],
        "Vx_0": [],
        "Vx_e": [],
        "Vz": [],
        "Vz_0": [],
        "W": [],
        "W_0": [],
        "W_e": [],
        "Zl": [
            1,
            1
        ],
        "Zl_0": [],
        "Zl_e": [],
        "Zu": [
            1,
            1
        ],
        "Zu_0": [],
        "Zu_e": [],
        "cost_ext_fun_type": "casadi",
        "cost_ext_fun_type_0": "casadi",
        "cost_ext_fun_type_e": "casadi",
        "cost_function_ext_cost": null,
        "cost_function_ext_cost_0": null,
        "cost_function_ext_cost_e": null,
        "cost_source_ext_cost": null,
        "cost_source_ext_cost_0": null,
        "cost_source_ext_cost_e": null,
        "cost_type": "EXTERNAL",
        "cost_type_0": "EXTERNAL",
        "cost_type_e": "EXTERNAL",
        "yref": [],
        "yref_0": [],
        "yref_e": [],
        "zl": [
            1,
            1
        ],
        "zl_0": [],
        "zl_e": [],
        "zu": [
            1,
            1
        ],
        "zu_0": [],
        "zu_e": []
    },
    "cython_include_dirs": [
        "/home/bryansgue/.local/lib/python3.8/site-packages/numpy/core/include",
        "/usr/include/python3.8"
    ],
    "dims": {
        "N": 30,
        "n_global_data": 0,
        "nbu": 2,
        "nbx": 0,
        "nbx_0": 9,
        "nbx_e": 0,
        "nbxe_0": 9,
        "ng": 0,
        "ng_e": 0,
        "nh": 2,
        "nh_0": 0,
        "nh_e": 0,
        "np": 16,
        "np_global": 0,
        "nphi": 0,
        "nphi_0": 0,
        "nphi_e": 0,
        "nr": 0,
        "nr_0": 0,
        "nr_e": 0,
        "ns": 2,
        "ns_0": 0,
        "ns_e": 0,
        "nsbu": 0,
        "nsbx": 0,
        "nsbx_e": 0,
        "nsg": 0,
        "nsg_e": 0,
        "nsh": 2,
        "nsh_0": 0,
        "nsh_e": 0,
        "nsphi": 0,
        "nsphi_0": 0,
        "nsphi_e": 0,
        "nu": 2,
        "nx": 9,
        "nx_next": 9,
        "ny": 0,
        "ny_0": 0,
        "ny_e": 0,
        "nz": 0
    },
    "external_function_files_model": [
        "USV_quat_ode_model/USV_quat_ode_expl_ode_fun.c",
        "USV_quat_ode_model/USV_quat_ode_expl_vde_forw.c",
        "USV_quat_ode_model/USV_quat_ode_expl_vde_adj.c"
    ],
    "external_function_files_ocp": [
        "USV_quat_ode_constraints/USV_quat_ode_constr_h_fun_jac_uxt_zt.c",
        "USV_quat_ode_constraints/USV_quat_ode_constr_h_fun.c",
        "USV_quat_ode_cost/USV_quat_ode_cost_ext_cost_0_fun.c",
        "USV_quat_ode_cost/USV_quat_ode_cost_ext_cost_0_fun_jac_hess.c",
        "USV_quat_ode_cost/USV_quat_ode_cost_ext_cost_0_fun_jac.c",
        "USV_quat_ode_cost/USV_quat_ode_cost_ext_cost_fun.c",
        "USV_quat_ode_cost/USV_quat_ode_cost_ext_cost_fun_jac_hess.c",
        "USV_quat_ode_cost/USV_quat_ode_cost_ext_cost_fun_jac.c",
        "USV_quat_ode_cost/USV_quat_ode_cost_ext_cost_e_fun.c",
        "USV_quat_ode_cost/USV_quat_ode_cost_ext_cost_e_fun_jac_hess.c",
        "USV_quat_ode_cost/USV_quat_ode_cost_ext_cost_e_fun_jac.c"
    ],
    "json_file": "acados_ocp_USV_quat_ode.json",
    "model": {
        "con_h_expr": "@1=(x-2.5), @2=(y-4), @3=sqrt(((sq(@1)+sq(@2))+sq(q0))), @4=(2.*@3), @5=((2.*@2)/@4), @6=sqrt((((sq(q0)+sq(q1))+sq(q2))+sq(q3))), @7=(q2/@6), @8=(q3/@6), @9=(q1/@6), @10=(q0/@6), @11=(((((((((((((((((zeros(3x3)[0] += (1-(2.*(sq(@7)+sq(@8)))))[3] = 0)[3] += (2.*((@9*@7)-(@10*@8))))[6] = 0)[6] += (2.*((@9*@8)+(@10*@7))))[1] = 0)[1] += (2.*((@9*@7)+(@10*@8))))[4] = 0)[4] += (1-(2.*(sq(@9)+sq(@8)))))[7] = 0)[7] += (2.*((@7*@8)-(@10*@9))))[2] = 0)[2] += (2.*((@9*@8)-(@10*@7))))[5] = 0)[5] += (2.*((@7*@8)+(@10*@9))))[8] = 0)[8] += (1-(2.*(sq(@9)+sq(@7))))), @12=vertcat(u, v, 0), @13=mac(@11,@12,zeros(3x1)), @14=0.5, @15=horzcat(horzcat(0, 0, 0, (-r))', horzcat(0, 0, r, 0)', horzcat(0, (-r), 0, 0)', horzcat(r, 0, 0, 0)'), @16=vertcat(q0, q1, q2, q3), @17=(@14*mac(@15',@16,zeros(4x1))), @18=0.0952381, @19=10, @20=(@19*v), @21=0.3, @22=0.0769231, @23=-1.5, @24=10, @25=(@24*u), @26=0.379747, @27=0.2, @28=vertcat(@13[0], @13[1], @17, (@18*((@20*r)-(@21*u))), (@22*((@23*v)-(@25*r))), (-(@26*(@27*r)))), @29=(@28[2] = 0), @30=@29[1], @31=((2.*q0)/@4), @32=@17[0], @33=((2.*@1)/@4), @34=(@29[1] = 0)[0], @35=((2.*(((-((@5/@4)*@30))-((@31/@4)*@32))-((@33/@4)*@34)))/(2.*@3)), @36=(((zeros(9x1,3nz)[0] = @33)[1] = @5)[2] = @31), @37=vertsplit(dense(@36)), @38=(@14*@37{2}), @39=vertsplit(mac(@15,@38,zeros(4x1))), @40=((zeros(3x1)[1] += @37{1})[0] += @37{0}), @41=mac(@40,@12',zeros(3x3)), @42=(@41[8] = 0), @43=(2.*@42[5]), @44=(@42[5] = 0), @45=(2.*@44[2]), @46=(@44[2] = 0), @47=(2.*@46[7]), @48=(@46[7] = 0), @49=(@48[4] = 0), @50=(2.*@49[1]), @51=(@49[1] = 0), @52=(2.*@51[6]), @53=(@51[6] = 0), @54=(2.*@53[3]), @55=((((((@9*@43)-(@7*@45))-(@9*@47))+(@8*@50))+(@7*@52))-(@8*@54)), @56=(2.*(-@41[8])), @57=(2.*(-@48[4])), @58=(((((((((2.*@9)*@56)+(@10*@43))+(@8*@45))-(@10*@47))+((2.*@9)*@57))+(@7*@50))+(@8*@52))+(@7*@54)), @59=(2.*(-(@53[3] = 0)[0])), @60=((((((((@7*@43)+(@9*@45))+(@7*@47))+((2.*@8)*@57))+(@10*@50))+(@9*@52))-(@10*@54))+((2.*@8)*@59)), @61=(((((((((2.*@7)*@56)+(@8*@43))-(@10*@45))+(@8*@47))+(@9*@50))+(@10*@52))+(@9*@54))+((2.*@7)*@59)), @62=(((((-((@9/@6)*@58))-((@10/@6)*@55))-((@8/@6)*@60))-((@7/@6)*@61))/(2.*@6)), @63=(@18*@37{3}), @64=(@22*@37{4}), @65=vertsplit(mac(@11',@40,zeros(3x1))), @66=horzsplit(mac(@38,@16',zeros(4x4))'), @67=(@28[2] = 0), @68=@67[1], @69=@17[0], @70=(@67[1] = 0)[0], @71=((2.*(((-((@5/@4)*@68))-((@31/@4)*@69))-((@33/@4)*@70)))/(2.*@3)), @72=vertsplit(dense(@36)), @73=(@14*@72{2}), @74=vertsplit(mac(@15,@73,zeros(4x1))), @75=((zeros(3x1)[1] += @72{1})[0] += @72{0}), @76=mac(@75,@12',zeros(3x3)), @77=(@76[8] = 0), @78=(2.*@77[5]), @79=(@77[5] = 0), @80=(2.*@79[2]), @81=(@79[2] = 0), @82=(2.*@81[7]), @83=(@81[7] = 0), @84=(@83[4] = 0), @85=(2.*@84[1]), @86=(@84[1] = 0), @87=(2.*@86[6]), @88=(@86[6] = 0), @89=(2.*@88[3]), @90=((((((@9*@78)-(@7*@80))-(@9*@82))+(@8*@85))+(@7*@87))-(@8*@89)), @91=(2.*(-@76[8])), @92=(2.*(-@83[4])), @93=(((((((((2.*@9)*@91)+(@10*@78))+(@8*@80))-(@10*@82))+((2.*@9)*@92))+(@7*@85))+(@8*@87))+(@7*@89)), @94=(2.*(-(@88[3] = 0)[0])), @95=((((((((@7*@78)+(@9*@80))+(@7*@82))+((2.*@8)*@92))+(@10*@85))+(@9*@87))-(@10*@89))+((2.*@8)*@94)), @96=(((((((((2.*@7)*@91)+(@8*@78))-(@10*@80))+(@8*@82))+(@9*@85))+(@10*@87))+(@9*@89))+((2.*@7)*@94)), @97=(((((-((@9/@6)*@93))-((@10/@6)*@90))-((@8/@6)*@95))-((@7/@6)*@96))/(2.*@6)), @98=(@18*@72{3}), @99=(@22*@72{4}), @100=vertsplit(mac(@11',@75,zeros(3x1))), @101=horzsplit(mac(@73,@16',zeros(4x4))'), @102=vertsplit(ones(2x1)), @103=(zeros(2x9,2nz)[:2] = vertcat(00, 00, zeros(4x1,0nz), (@18*@102{0}), 00, (@26*@102{1}))[:2])', @104=vertcat(tau_u, tau_r), @105=(x-2.5), @106=(y--5), @107=sqrt(((sq(@105)+sq(@106))+sq(q0))), @108=(2.*@107), @109=((2.*@106)/@108), @110=(@28[2] = 0), @111=@110[1], @112=((2.*q0)/@108), @113=@17[0], @114=((2.*@105)/@108), @115=(@110[1] = 0)[0], @116=((2.*(((-((@109/@108)*@111))-((@112/@108)*@113))-((@114/@108)*@115)))/(2.*@107)), @117=(((zeros(9x1,3nz)[0] = @114)[1] = @109)[2] = @112), @118=vertsplit(dense(@117)), @119=(@14*@118{2}), @120=vertsplit(mac(@15,@119,zeros(4x1))), @121=((zeros(3x1)[1] += @118{1})[0] += @118{0}), @122=mac(@121,@12',zeros(3x3)), @123=(@122[8] = 0), @124=(2.*@123[5]), @125=(@123[5] = 0), @126=(2.*@125[2]), @127=(@125[2] = 0), @128=(2.*@127[7]), @129=(@127[7] = 0), @130=(@129[4] = 0), @131=(2.*@130[1]), @132=(@130[1] = 0), @133=(2.*@132[6]), @134=(@132[6] = 0), @135=(2.*@134[3]), @136=((((((@9*@124)-(@7*@126))-(@9*@128))+(@8*@131))+(@7*@133))-(@8*@135)), @137=(2.*(-@122[8])), @138=(2.*(-@129[4])), @139=(((((((((2.*@9)*@137)+(@10*@124))+(@8*@126))-(@10*@128))+((2.*@9)*@138))+(@7*@131))+(@8*@133))+(@7*@135)), @140=(2.*(-(@134[3] = 0)[0])), @141=((((((((@7*@124)+(@9*@126))+(@7*@128))+((2.*@8)*@138))+(@10*@131))+(@9*@133))-(@10*@135))+((2.*@8)*@140)), @142=(((((((((2.*@7)*@137)+(@8*@124))-(@10*@126))+(@8*@128))+(@9*@131))+(@10*@133))+(@9*@135))+((2.*@7)*@140)), @143=(((((-((@9/@6)*@139))-((@10/@6)*@136))-((@8/@6)*@141))-((@7/@6)*@142))/(2.*@6)), @144=(@18*@118{3}), @145=(@22*@118{4}), @146=vertsplit(mac(@11',@121,zeros(3x1))), @147=horzsplit(mac(@119,@16',zeros(4x4))'), @148=(@28[2] = 0), @149=@148[1], @150=@17[0], @151=(@148[1] = 0)[0], @152=((2.*(((-((@109/@108)*@149))-((@112/@108)*@150))-((@114/@108)*@151)))/(2.*@107)), @153=vertsplit(dense(@117)), @154=(@14*@153{2}), @155=vertsplit(mac(@15,@154,zeros(4x1))), @156=((zeros(3x1)[1] += @153{1})[0] += @153{0}), @157=mac(@156,@12',zeros(3x3)), @158=(@157[8] = 0), @159=(2.*@158[5]), @160=(@158[5] = 0), @161=(2.*@160[2]), @162=(@160[2] = 0), @163=(2.*@162[7]), @164=(@162[7] = 0), @165=(@164[4] = 0), @166=(2.*@165[1]), @167=(@165[1] = 0), @168=(2.*@167[6]), @169=(@167[6] = 0), @170=(2.*@169[3]), @171=((((((@9*@159)-(@7*@161))-(@9*@163))+(@8*@166))+(@7*@168))-(@8*@170)), @172=(2.*(-@157[8])), @173=(2.*(-@164[4])), @174=(((((((((2.*@9)*@172)+(@10*@159))+(@8*@161))-(@10*@163))+((2.*@9)*@173))+(@7*@166))+(@8*@168))+(@7*@170)), @175=(2.*(-(@169[3] = 0)[0])), @176=((((((((@7*@159)+(@9*@161))+(@7*@163))+((2.*@8)*@173))+(@10*@166))+(@9*@168))-(@10*@170))+((2.*@8)*@175)), @177=(((((((((2.*@7)*@172)+(@8*@159))-(@10*@161))+(@8*@163))+(@9*@166))+(@10*@168))+(@9*@170))+((2.*@7)*@175)), @178=(((((-((@9/@6)*@174))-((@10/@6)*@171))-((@8/@6)*@176))-((@7/@6)*@177))/(2.*@6)), @179=(@18*@153{3}), @180=(@22*@153{4}), @181=vertsplit(mac(@11',@156,zeros(3x1))), @182=horzsplit(mac(@154,@16',zeros(4x4))'), vertcat(((mac((((((((((zeros(9x1)[0] = (((2.*@1)*@35)+(2.*(@34/@4))))[1] = ((2.*(@30/@4))+((2.*@2)*@35)))[2] = ((((@39{0}+(@55/@6))+((2.*q0)*@62))+(2.*(@32/@4)))+((2.*q0)*@35)))[3] = ((@39{1}+(@58/@6))+((2.*q1)*@62)))[4] = ((@39{2}+(@61/@6))+((2.*q2)*@62)))[5] = ((@39{3}+(@60/@6))+((2.*q3)*@62)))[6] = (((-(@21*@63))-(@24*(r*@64)))+@65{0}))[7] = (((@23*@64)+(@19*(r*@63)))+@65{1}))[8] = (((((((-(@25*@64))-(@27*(@26*@37{5})))+(@20*@63))+horzsplit(@66{3}'){0})-horzsplit(@66{2}'){1})+horzsplit(@66{1}'){2})-horzsplit(@66{0}'){3}))',@28,0)+mac(mac((((((((((zeros(9x1)[0] = (((2.*@1)*@71)+(2.*(@70/@4))))[1] = ((2.*(@68/@4))+((2.*@2)*@71)))[2] = ((((@74{0}+(@90/@6))+((2.*q0)*@97))+(2.*(@69/@4)))+((2.*q0)*@71)))[3] = ((@74{1}+(@93/@6))+((2.*q1)*@97)))[4] = ((@74{2}+(@96/@6))+((2.*q2)*@97)))[5] = ((@74{3}+(@95/@6))+((2.*q3)*@97)))[6] = (((-(@21*@98))-(@24*(r*@99)))+@100{0}))[7] = (((@23*@99)+(@19*(r*@98)))+@100{1}))[8] = (((((((-(@25*@99))-(@27*(@26*@72{5})))+(@20*@98))+horzsplit(@101{3}'){0})-horzsplit(@101{2}'){1})+horzsplit(@101{1}'){2})-horzsplit(@101{0}'){3}))',@103,zeros(1x2)),@104,0))+mac([25, 15]',vertcat((@3-1.1), mac(@36',@28,0)),0)), ((mac((((((((((zeros(9x1)[0] = (((2.*@105)*@116)+(2.*(@115/@108))))[1] = ((2.*(@111/@108))+((2.*@106)*@116)))[2] = ((((@120{0}+(@136/@6))+((2.*q0)*@143))+(2.*(@113/@108)))+((2.*q0)*@116)))[3] = ((@120{1}+(@139/@6))+((2.*q1)*@143)))[4] = ((@120{2}+(@142/@6))+((2.*q2)*@143)))[5] = ((@120{3}+(@141/@6))+((2.*q3)*@143)))[6] = (((-(@21*@144))-(@24*(r*@145)))+@146{0}))[7] = (((@23*@145)+(@19*(r*@144)))+@146{1}))[8] = (((((((-(@25*@145))-(@27*(@26*@118{5})))+(@20*@144))+horzsplit(@147{3}'){0})-horzsplit(@147{2}'){1})+horzsplit(@147{1}'){2})-horzsplit(@147{0}'){3}))',@28,0)+mac(mac((((((((((zeros(9x1)[0] = (((2.*@105)*@152)+(2.*(@151/@108))))[1] = ((2.*(@149/@108))+((2.*@106)*@152)))[2] = ((((@155{0}+(@171/@6))+((2.*q0)*@178))+(2.*(@150/@108)))+((2.*q0)*@152)))[3] = ((@155{1}+(@174/@6))+((2.*q1)*@178)))[4] = ((@155{2}+(@177/@6))+((2.*q2)*@178)))[5] = ((@155{3}+(@176/@6))+((2.*q3)*@178)))[6] = (((-(@21*@179))-(@24*(r*@180)))+@181{0}))[7] = (((@23*@180)+(@19*(r*@179)))+@181{1}))[8] = (((((((-(@25*@180))-(@27*(@26*@153{5})))+(@20*@179))+horzsplit(@182{3}'){0})-horzsplit(@182{2}'){1})+horzsplit(@182{1}'){2})-horzsplit(@182{0}'){3}))',@103,zeros(1x2)),@104,0))+mac([25, 15]',vertcat((@107-1), mac(@117',@28,0)),0)))",
        "con_h_expr_0": [],
        "con_h_expr_e": [],
        "con_phi_expr": [],
        "con_phi_expr_0": [],
        "con_phi_expr_e": [],
        "con_r_expr": [],
        "con_r_expr_0": [],
        "con_r_expr_e": [],
        "con_r_in_phi": [],
        "con_r_in_phi_0": [],
        "con_r_in_phi_e": [],
        "cost_conl_custom_outer_hess": [],
        "cost_conl_custom_outer_hess_0": [],
        "cost_conl_custom_outer_hess_e": [],
        "cost_expr_ext_cost": "@1=(vertcat(q0, (-q1), (-q2), (-q3))/||vertcat(q0, q1, q2, q3)||_F), @2=@1[0], @3=@1[1], @4=@1[2], @5=@1[3], @6=((((@2*el_x)-(@3*el_y))-(@4*ec_x))-(@5*ec_y)), @7=(@6<0), @8=vertcat(@6, ((((@2*el_y)+(@3*el_x))+(@4*ec_y))-(@5*ec_x)), ((((@2*ec_x)-(@3*ec_y))+(@4*el_x))+(@5*el_y)), ((((@2*ec_y)+(@3*ec_x))-(@4*el_y))+(@5*el_x))), @9=((@7?(-@8):0)+((!@7)?@8:0)), @10=@9[1:4], @11=||@10||_F, @12=(((2.*@10)*atan2(@11,@9[0]))/@11), @13=vertcat(x_d, y_d, q0_d, q1_d, q2_d, q3_d, u_d, v_d, r_d, tau_u_d, tau_r_d, el_x, el_y, ec_x, ec_y, theta_p), @14=@13[3:5], @15=(@14/||@14||_F), @16=(@13[:2]-vertcat(x, y, q0, q1, q2, q3, u, v, r)[:2]), @17=mac((\n[[1, 0], \n [0, 1]]-mac(@15',@15,0)[0, 0, 0, 0]),@16,zeros(2x1)), @18=(dot(@15, @16)*@15), @19=sqrt((((sq(q0)+sq(q1))+sq(q2))+sq(q3))), @20=(q2/@19), @21=(q3/@19), @22=(q1/@19), @23=(q0/@19), @24=vertcat(tau_u, tau_r), (((mac(mac(@12',\n[[0.1, 0, 0], \n [0, 0.1, 0], \n [0, 0, 2]],zeros(1x3)),@12,0)+(mac(mac(@17',\n[[6, 0], \n [0, 6]],zeros(1x2)),@17,0)+mac(mac(@18',\n[[5, 0], \n [0, 5]],zeros(1x2)),@18,0)))-(0.001*dot(@15, mac((((((((((zeros(3x3)[0] = (1-(2.*(sq(@20)+sq(@21)))))[3] = (2.*((@22*@20)-(@23*@21))))[6] = (2.*((@22*@21)+(@23*@20))))[1] = (2.*((@22*@20)+(@23*@21))))[4] = (1-(2.*(sq(@22)+sq(@21)))))[7] = (2.*((@20*@21)-(@23*@22))))[2] = (2.*((@22*@21)-(@23*@20))))[5] = (2.*((@20*@21)+(@23*@22))))[8] = (1-(2.*(sq(@22)+sq(@20))))),vertcat(u, v, 0),zeros(3x1))[:2])))+mac(mac(@24',\n[[0.005, 0], \n [0, 0.005]],zeros(1x2)),@24,0))",
        "cost_expr_ext_cost_0": "@1=(vertcat(q0, (-q1), (-q2), (-q3))/||vertcat(q0, q1, q2, q3)||_F), @2=@1[0], @3=@1[1], @4=@1[2], @5=@1[3], @6=((((@2*el_x)-(@3*el_y))-(@4*ec_x))-(@5*ec_y)), @7=(@6<0), @8=vertcat(@6, ((((@2*el_y)+(@3*el_x))+(@4*ec_y))-(@5*ec_x)), ((((@2*ec_x)-(@3*ec_y))+(@4*el_x))+(@5*el_y)), ((((@2*ec_y)+(@3*ec_x))-(@4*el_y))+(@5*el_x))), @9=((@7?(-@8):0)+((!@7)?@8:0)), @10=@9[1:4], @11=||@10||_F, @12=(((2.*@10)*atan2(@11,@9[0]))/@11), @13=vertcat(x_d, y_d, q0_d, q1_d, q2_d, q3_d, u_d, v_d, r_d, tau_u_d, tau_r_d, el_x, el_y, ec_x, ec_y, theta_p), @14=@13[3:5], @15=(@14/||@14||_F), @16=(@13[:2]-vertcat(x, y, q0, q1, q2, q3, u, v, r)[:2]), @17=mac((\n[[1, 0], \n [0, 1]]-mac(@15',@15,0)[0, 0, 0, 0]),@16,zeros(2x1)), @18=(dot(@15, @16)*@15), @19=sqrt((((sq(q0)+sq(q1))+sq(q2))+sq(q3))), @20=(q2/@19), @21=(q3/@19), @22=(q1/@19), @23=(q0/@19), @24=vertcat(tau_u, tau_r), (((mac(mac(@12',\n[[0.1, 0, 0], \n [0, 0.1, 0], \n [0, 0, 2]],zeros(1x3)),@12,0)+(mac(mac(@17',\n[[6, 0], \n [0, 6]],zeros(1x2)),@17,0)+mac(mac(@18',\n[[5, 0], \n [0, 5]],zeros(1x2)),@18,0)))-(0.001*dot(@15, mac((((((((((zeros(3x3)[0] = (1-(2.*(sq(@20)+sq(@21)))))[3] = (2.*((@22*@20)-(@23*@21))))[6] = (2.*((@22*@21)+(@23*@20))))[1] = (2.*((@22*@20)+(@23*@21))))[4] = (1-(2.*(sq(@22)+sq(@21)))))[7] = (2.*((@20*@21)-(@23*@22))))[2] = (2.*((@22*@21)-(@23*@20))))[5] = (2.*((@20*@21)+(@23*@22))))[8] = (1-(2.*(sq(@22)+sq(@20))))),vertcat(u, v, 0),zeros(3x1))[:2])))+mac(mac(@24',\n[[0.005, 0], \n [0, 0.005]],zeros(1x2)),@24,0))",
        "cost_expr_ext_cost_custom_hess": [],
        "cost_expr_ext_cost_custom_hess_0": [],
        "cost_expr_ext_cost_custom_hess_e": [],
        "cost_expr_ext_cost_e": "@1=(vertcat(q0, (-q1), (-q2), (-q3))/||vertcat(q0, q1, q2, q3)||_F), @2=@1[0], @3=@1[1], @4=@1[2], @5=@1[3], @6=((((@2*el_x)-(@3*el_y))-(@4*ec_x))-(@5*ec_y)), @7=(@6<0), @8=vertcat(@6, ((((@2*el_y)+(@3*el_x))+(@4*ec_y))-(@5*ec_x)), ((((@2*ec_x)-(@3*ec_y))+(@4*el_x))+(@5*el_y)), ((((@2*ec_y)+(@3*ec_x))-(@4*el_y))+(@5*el_x))), @9=((@7?(-@8):0)+((!@7)?@8:0)), @10=@9[1:4], @11=||@10||_F, @12=(((2.*@10)*atan2(@11,@9[0]))/@11), @13=vertcat(x_d, y_d, q0_d, q1_d, q2_d, q3_d, u_d, v_d, r_d, tau_u_d, tau_r_d, el_x, el_y, ec_x, ec_y, theta_p), @14=@13[3:5], @15=(@14/||@14||_F), @16=(@13[:2]-vertcat(x, y, q0, q1, q2, q3, u, v, r)[:2]), @17=mac((\n[[1, 0], \n [0, 1]]-mac(@15',@15,0)[0, 0, 0, 0]),@16,zeros(2x1)), @18=(dot(@15, @16)*@15), @19=sqrt((((sq(q0)+sq(q1))+sq(q2))+sq(q3))), @20=(q2/@19), @21=(q3/@19), @22=(q1/@19), @23=(q0/@19), ((mac(mac(@12',\n[[0.1, 0, 0], \n [0, 0.1, 0], \n [0, 0, 2]],zeros(1x3)),@12,0)+(mac(mac(@17',\n[[6, 0], \n [0, 6]],zeros(1x2)),@17,0)+mac(mac(@18',\n[[5, 0], \n [0, 5]],zeros(1x2)),@18,0)))-(0.001*dot(@15, mac((((((((((zeros(3x3)[0] = (1-(2.*(sq(@20)+sq(@21)))))[3] = (2.*((@22*@20)-(@23*@21))))[6] = (2.*((@22*@21)+(@23*@20))))[1] = (2.*((@22*@20)+(@23*@21))))[4] = (1-(2.*(sq(@22)+sq(@21)))))[7] = (2.*((@20*@21)-(@23*@22))))[2] = (2.*((@22*@21)-(@23*@20))))[5] = (2.*((@20*@21)+(@23*@22))))[8] = (1-(2.*(sq(@22)+sq(@20))))),vertcat(u, v, 0),zeros(3x1))[:2])))",
        "cost_psi_expr": [],
        "cost_psi_expr_0": [],
        "cost_psi_expr_e": [],
        "cost_r_in_psi_expr": [],
        "cost_r_in_psi_expr_0": [],
        "cost_r_in_psi_expr_e": [],
        "cost_y_expr": [],
        "cost_y_expr_0": [],
        "cost_y_expr_e": [],
        "disc_dyn_expr": [],
        "dyn_disc_fun": null,
        "dyn_disc_fun_jac": null,
        "dyn_disc_fun_jac_hess": null,
        "dyn_ext_fun_type": "casadi",
        "dyn_generic_source": null,
        "dyn_impl_dae_fun": null,
        "dyn_impl_dae_fun_jac": null,
        "dyn_impl_dae_jac": null,
        "f_expl_expr": "@1=sqrt((((sq(q0)+sq(q1))+sq(q2))+sq(q3))), @2=(q2/@1), @3=(q3/@1), @4=(q1/@1), @5=(q0/@1), @6=mac((((((((((zeros(3x3)[0] = (1-(2.*(sq(@2)+sq(@3)))))[3] = (2.*((@4*@2)-(@5*@3))))[6] = (2.*((@4*@3)+(@5*@2))))[1] = (2.*((@4*@2)+(@5*@3))))[4] = (1-(2.*(sq(@4)+sq(@3)))))[7] = (2.*((@2*@3)-(@5*@4))))[2] = (2.*((@4*@3)-(@5*@2))))[5] = (2.*((@2*@3)+(@5*@4))))[8] = (1-(2.*(sq(@4)+sq(@2))))),vertcat(u, v, 0),zeros(3x1)), vertcat(@6[0], @6[1], (0.5*mac(horzcat(horzcat(0, 0, 0, (-r))', horzcat(0, 0, r, 0)', horzcat(0, (-r), 0, 0)', horzcat(r, 0, 0, 0)')',vertcat(q0, q1, q2, q3),zeros(4x1))), (0.0952381*((tau_u-(0.3*u))+((10*v)*r))), (0.0769231*((-1.5*v)-((10*u)*r))), (0.379747*(tau_r-(0.2*r))))",
        "f_impl_expr": "@1=sqrt((((sq(q0)+sq(q1))+sq(q2))+sq(q3))), @2=(q2/@1), @3=(q3/@1), @4=(q1/@1), @5=(q0/@1), @6=mac((((((((((zeros(3x3)[0] = (1-(2.*(sq(@2)+sq(@3)))))[3] = (2.*((@4*@2)-(@5*@3))))[6] = (2.*((@4*@3)+(@5*@2))))[1] = (2.*((@4*@2)+(@5*@3))))[4] = (1-(2.*(sq(@4)+sq(@3)))))[7] = (2.*((@2*@3)-(@5*@4))))[2] = (2.*((@4*@3)-(@5*@2))))[5] = (2.*((@2*@3)+(@5*@4))))[8] = (1-(2.*(sq(@4)+sq(@2))))),vertcat(u, v, 0),zeros(3x1)), (vertcat(x_p, y_p, q0_p, q1_p, q2_p, q3_p, u_p, v_p, r_p)-vertcat(@6[0], @6[1], (0.5*mac(horzcat(horzcat(0, 0, 0, (-r))', horzcat(0, 0, r, 0)', horzcat(0, (-r), 0, 0)', horzcat(r, 0, 0, 0)')',vertcat(q0, q1, q2, q3),zeros(4x1))), (0.0952381*((tau_u-(0.3*u))+((10*v)*r))), (0.0769231*((-1.5*v)-((10*u)*r))), (0.379747*(tau_r-(0.2*r)))))",
        "gnsf_nontrivial_f_LO": 1,
        "gnsf_purely_linear": 0,
        "name": "USV_quat_ode",
        "nu_original": null,
        "p": "vertcat(x_d, y_d, q0_d, q1_d, q2_d, q3_d, u_d, v_d, r_d, tau_u_d, tau_r_d, el_x, el_y, ec_x, ec_y, theta_p)",
        "p_global": "0x1",
        "t": [],
        "t0": null,
        "t_label": "t",
        "u": "vertcat(tau_u, tau_r)",
        "u_labels": null,
        "x": "vertcat(x, y, q0, q1, q2, q3, u, v, r)",
        "x_labels": null,
        "xdot": "vertcat(x_p, y_p, q0_p, q1_p, q2_p, q3_p, u_p, v_p, r_p)",
        "z": "0x1"
    },
    "name": "USV_quat_ode",
    "p": "vertcat(x_d, y_d, q0_d, q1_d, q2_d, q3_d, u_d, v_d, r_d, tau_u_d, tau_r_d, el_x, el_y, ec_x, ec_y, theta_p)",
    "p_global_values": [],
    "parameter_values": [
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0
    ],
    "problem_class": "OCP",
    "shared_lib_ext": ".so",
    "simulink_opts": null,
    "solver_options": {
        "N_horizon": 30,
        "Tsim": 0.03333333333333333,
        "adaptive_levenberg_marquardt_lam": 5.0,
        "adaptive_levenberg_marquardt_mu0": 0.001,
        "adaptive_levenberg_marquardt_mu_min": 1e-16,
        "as_rti_iter": 1,
        "as_rti_level": 4,
        "collocation_type": "GAUSS_LEGENDRE",
        "cost_discretization": "EULER",
        "cost_scaling": [
            0.03333333333333333,
            0.03333333333333333,
            0.03333333333333333,
            0.03333333333333333,
            0.03333333333333333,
            0.03333333333333333,
            0.03333333333333333,
            0.03333333333333333,
            0.03333333333333333,
            0.03333333333333333,
            0.03333333333333333,
            0.03333333333333333,
            0.03333333333333333,
            0.03333333333333333,
            0.03333333333333333,
            0.03333333333333333,
            0.03333333333333333,
            0.03333333333333333,
            0.03333333333333333,
            0.03333333333333333,
            0.03333333333333333,
            0.03333333333333333,
            0.03333333333333333,
            0.03333333333333333,
            0.03333333333333333,
            0.03333333333333333,
            0.03333333333333333,
            0.03333333333333333,
            0.03333333333333333,
            0.03333333333333333,
            1.0
        ],
        "custom_templates": [],
        "custom_update_copy": true,
        "custom_update_filename": "",
        "custom_update_header_filename": "",
        "eval_residual_at_max_iter": false,
        "exact_hess_constr": 1,
        "exact_hess_cost": 1,
        "exact_hess_dyn": 1,
        "ext_cost_num_hess": 0,
        "ext_fun_compile_flags": "-O2",
        "ext_fun_expand": false,
        "fixed_hess": 0,
        "globalization": "FIXED_STEP",
        "globalization_alpha_min": 0.05,
        "globalization_alpha_reduction": 0.7,
        "globalization_eps_sufficient_descent": 0.0001,
        "globalization_fixed_step_length": 1.0,
        "globalization_full_step_dual": 0,
        "globalization_funnel_fraction_switching_condition": 0.001,
        "globalization_funnel_init_increase_factor": 15.0,
        "globalization_funnel_init_upper_bound": 1.0,
        "globalization_funnel_initial_penalty_parameter": 1.0,
        "globalization_funnel_kappa": 0.9,
        "globalization_funnel_sufficient_decrease_factor": 0.9,
        "globalization_line_search_use_sufficient_descent": 0,
        "globalization_use_SOC": 0,
        "hessian_approx": "GAUSS_NEWTON",
        "hpipm_mode": "BALANCE",
        "integrator_type": "ERK",
        "levenberg_marquardt": 0.0,
        "log_primal_step_norm": false,
        "model_external_shared_lib_dir": null,
        "model_external_shared_lib_name": null,
        "nlp_solver_ext_qp_res": 0,
        "nlp_solver_max_iter": 100,
        "nlp_solver_tol_comp": 0.0001,
        "nlp_solver_tol_eq": 0.0001,
        "nlp_solver_tol_ineq": 0.0001,
        "nlp_solver_tol_min_step_norm": 0.0,
        "nlp_solver_tol_stat": 0.0001,
        "nlp_solver_type": "SQP_RTI",
        "nlp_solver_warm_start_first_qp": false,
        "nlp_solver_warm_start_first_qp_from_nlp": false,
        "num_threads_in_batch_solve": 1,
        "print_level": 0,
        "qp_solver": "FULL_CONDENSING_HPIPM",
        "qp_solver_cond_N": 30,
        "qp_solver_cond_block_size": null,
        "qp_solver_cond_ric_alg": 1,
        "qp_solver_iter_max": 50,
        "qp_solver_mu0": 0.0,
        "qp_solver_ric_alg": 1,
        "qp_solver_tol_comp": null,
        "qp_solver_tol_eq": null,
        "qp_solver_tol_ineq": null,
        "qp_solver_tol_stat": null,
        "qp_solver_warm_start": 0,
        "reg_epsilon": 0.0001,
        "regularize_method": "NO_REGULARIZE",
        "rti_log_only_available_residuals": 0,
        "rti_log_residuals": 0,
        "shooting_nodes": [
            0.0,
            0.03333333333333333,
            0.06666666666666667,
            0.1,
            0.13333333333333333,
            0.16666666666666666,
            0.19999999999999998,
            0.2333333333333333,
            0.26666666666666666,
            0.3,
            0.3333333333333333,
            0.36666666666666664,
            0.39999999999999997,
            0.4333333333333333,
            0.4666666666666666,
            0.49999999999999994,
            0.5333333333333333,
            0.5666666666666667,
            0.6,
            0.6333333333333333,
            0.6666666666666666,
            0.7,
            0.7333333333333333,
            0.7666666666666666,
            0.7999999999999999,
            0.8333333333333333,
            0.8666666666666666,
            0.8999999999999999,
            0.9333333333333332,
            0.9666666666666666,
            0.9999999999999999
        ],
        "sim_method_jac_reuse": [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
        ],
        "sim_method_newton_iter": 3,
        "sim_method_newton_tol": 0.0,
        "sim_method_num_stages": [
            4,
            4,
            4,
            4,
            4,
            4,
            4,
            4,
            4,
            4,
            4,
            4,
            4,
            4,
            4,
            4,
            4,
            4,
            4,
            4,
            4,
            4,
            4,
            4,
            4,
            4,
            4,
            4,
            4,
            4
        ],
        "sim_method_num_steps": [
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1
        ],
        "store_iterates": false,
        "tf": 1.0,
        "time_steps": [
            0.03333333333333333,
            0.03333333333333333,
            0.03333333333333333,
            0.03333333333333333,
            0.03333333333333333,
            0.03333333333333333,
            0.03333333333333333,
            0.03333333333333333,
            0.03333333333333333,
            0.03333333333333333,
            0.03333333333333333,
            0.03333333333333333,
            0.03333333333333333,
            0.03333333333333333,
            0.03333333333333333,
            0.03333333333333333,
            0.03333333333333333,
            0.03333333333333333,
            0.03333333333333333,
            0.03333333333333333,
            0.03333333333333333,
            0.03333333333333333,
            0.03333333333333333,
            0.03333333333333333,
            0.03333333333333333,
            0.03333333333333333,
            0.03333333333333333,
            0.03333333333333333,
            0.03333333333333333,
            0.03333333333333333
        ],
        "timeout_heuristic": "LAST",
        "timeout_max_time": 0.0,
        "with_adaptive_levenberg_marquardt": false,
        "with_solution_sens_wrt_params": false,
        "with_value_sens_wrt_params": false
    },
    "zoro_description": null
}